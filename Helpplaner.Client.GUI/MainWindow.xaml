<Window x:Class="Helpplaner.Client.GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Helpplaner.Client.GUI"
      
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1200"
         
        Background="Transparent"  ResizeMode="CanResizeWithGrip" >


      <Window.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes\DarkMode.xaml"/>

                <ResourceDictionary Source="Templates.xaml"></ResourceDictionary>
                <!-- You can include a default theme here -->
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
            </Style>

            <Style TargetType="RadioButton">
                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
            </Style>

            <Style TargetType="Button">
                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundColorSecondary}"/>  
            </Style>

            <Style TargetType="Menu">
                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundColorSecondary}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="20"/>

                <Setter Property="BorderBrush"  Value="{DynamicResource BackgroundColorTextHighlight}" />
            </Style>
            <Style TargetType="ContextMenu">
                <Setter Property="Background" Value="{DynamicResource BackgroundColorSecondary}"/>
            </Style>

            <Style x:Key="MenuItemBaseStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <Path x:Name="GlyphPanel" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
                                    <ContentPresenter x:Name="content" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">

                                    <Border BorderThickness="2" BorderBrush="{DynamicResource BackgroundColorSecondary}" Background="{DynamicResource BackgroundColorTextHighlight}">
                                        <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource  BackgroundColorTextHighlight}" TargetName="content"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
                   TargetType="{x:Type RadioButton}"
                   x:Key="MenuButtonTheme">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="RadioButton">
                                <Grid VerticalAlignment="Stretch"
                                      HorizontalAlignment="Stretch"
                                      Background="{TemplateBinding Background}">

                                    <TextBlock Text="{TemplateBinding Property=Content}"
                                               VerticalAlignment="Center"
                                               Margin="20,0,0,0"
                                               FontSize="19"
                                               Foreground="{DynamicResource ColorText}"/>

                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource  BackgroundColorTextHighlight}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>

                </Style.Setters>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource  BackgroundColorTextHighlight}"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style TargetType="MenuItem">
                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundColorSecondary}"/>
                <Setter Property="BorderThickness" Value="0">
                    
                    

                </Setter>
                
                    
                
            </Style>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <ControlTemplate x:Key="ReloadButton" TargetType="{x:Type ButtonBase}">
                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted" Value="true">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource BackgroundColorTextHighlight}"></Setter>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>




        </ResourceDictionary>
        </Window.Resources>
    
    <Border Background="{DynamicResource BackgroundColorMain}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="12*" />
                <ColumnDefinition Width="90*"/>
                
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="6*"/>
                <RowDefinition Height="70*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0"  Grid.Column="0" Background="{DynamicResource  BackgroundColorTextHighlight}">
                <TextBlock x:Name="Username" Text="Helpplaner"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
            
              FontSize="20" 
              Margin="12,0,0,0"/>
        </Grid>
        <Grid Grid.Row="0"  Grid.Column="1" >
                <Menu Background="{DynamicResource  BackgroundColorSecondary}">

                    <MenuItem  x:Name="Projekte" Header="Projekte" Style="{StaticResource MenuItemBaseStyle}" Click="MenuItem_Click" VerticalAlignment="Bottom" Margin="0,10,0,0">
                        
                    </MenuItem>
                    <MenuItem Header="Preferenzen" Style="{StaticResource MenuItemBaseStyle}" Click="MenuItem_Click" VerticalAlignment="Bottom" Margin="0,10,0,0">
                        
                    </MenuItem>
                </Menu>
            </Grid>
           
            <StackPanel Grid.Row="1" Grid.Column="0" Background="{DynamicResource BackgroundColorSecondary}">
                <Button Content="Logout" Template="{DynamicResource ReloadButton}" 
               Height="50" VerticalAlignment="Bottom"
               Background="{StaticResource BackgroundColorSecondary}" FontSize="19" Click="Logout_Click" HorizontalAlignment="Left" Margin="20,0,0,0"/>

                <Button Content="Diagramm" Template="{DynamicResource ReloadButton}" 
Height="50" VerticalAlignment="Bottom"
Background="{StaticResource BackgroundColorSecondary}" FontSize="19" Click="Logout_Click" HorizontalAlignment="Left" Margin="20,0,0,0"/>

                <Button Content="Projekt" Template="{DynamicResource ReloadButton}" 
Height="50" VerticalAlignment="Bottom"
Background="{StaticResource BackgroundColorSecondary}" FontSize="19" Click="Logout_Click" HorizontalAlignment="Left" Margin="20,0,0,0"/>

                <RadioButton Content="AP-Übersicht"
                            Height="50"
                            Style="{StaticResource MenuButtonTheme}"/>
                <Button Template="{DynamicResource ReloadButton}" Content="Reload"
               Height="50" VerticalAlignment="Bottom"
               Background="{StaticResource BackgroundColorSecondary}" FontSize="19" Click="Reload_Click" HorizontalAlignment="Left" Margin="20,0,0,0"/>


            </StackPanel>

            <Frame x:Name="Main" Grid.Row="1" Grid.Column="1"  NavigationUIVisibility="Hidden" />  
            

        </Grid>
      

        
        
    </Border>
    
    
</Window>
