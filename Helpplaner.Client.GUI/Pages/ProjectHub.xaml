<Page x:Class="Helpplaner.Client.GUI.Pages.ProjectHub"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Helpplaner.Client.GUI.Pages"
      mc:Ignorable="d" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  
  d:DesignHeight="450" d:DesignWidth="700"
  Title="APÜbersicht"
  d:DataContext=" "
  

>

    <Page.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Themes\DarkMode.xaml"/>


                <!-- You can include a default theme here -->
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="TextBox" x:Key="WatermarkTextBoxStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <!-- TextBox -->
                                <TextBox Text="{TemplateBinding Text}" 
                       BorderThickness="{TemplateBinding BorderThickness}"
                       BorderBrush="{TemplateBinding BorderBrush}" />
                                <!-- Watermark TextBlock -->
                                <TextBlock Text="Enter text here..." 
                         Foreground="Gray" 
                         Margin="5,0,0,0"
                         VerticalAlignment="Center"
                         Visibility="Collapsed">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <!-- Show Watermark when TextBox is empty -->
                                                <DataTrigger Binding="{Binding Text.Length, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <!-- Hide Watermark when TextBox has text -->
                                                <DataTrigger Binding="{Binding Text.Length, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" >

            </Style>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <ControlTemplate x:Key="RoundetButton" TargetType="{x:Type ButtonBase}">
                <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted" Value="true">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{DynamicResource BackgroundColorTextHighlight}"></Setter>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="textboxSearch" TargetType="TextBox">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="#b0b0c6"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Padding" Value="10,7"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBoxBase">
                            <Border x:Name="border" CornerRadius="15"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True" BorderThickness="1"
                    BorderBrush="#e0e6ed">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                                </Trigger>

                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="addButton" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource BackgroundColorTextHighlight}"/>
                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
                <Setter Property="Width" Value="160"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Margin" Value="0 10 0 0"/>
                <Setter Property="Grid.Row" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="7"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

    </Page.Resources>

    <Grid Background="{DynamicResource BackgroundColorMain}">
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Background="{DynamicResource BackgroundColorSecondary}" Width="300" Height="300">

            <StackPanel Orientation="Horizontal">
                <Label FontSize="9" Foreground="{DynamicResource ColorText}">Nur Aktive Projekte Zeigen?</Label>
                <CheckBox x:Name="cbAktiveProjekte" IsChecked="False" Checked="cbAktiveProjekte_Checked" Unchecked="cbAktiveProjekte_Unchecked"  />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label FontSize="9" Foreground="{DynamicResource ColorText}">Nur Administrative Projekte Zeigen?</Label>
                <CheckBox x:Name="cbAdmin" IsChecked="False" Checked="cbAktiveProjekte_Checked" Unchecked="cbAktiveProjekte_Unchecked"  />
            </StackPanel>
            <TextBox x:Name="Search" materialDesign:HintAssist.Hint="Suche" Margin="20,5,20,5" TextChanged="Search_TextChanged" ></TextBox>
            <DataGrid x:Name="Projekts" AutoGenerateColumns="False" MouseDoubleClick="Projekts_MouseDoubleClick" SelectedCellsChanged="Projekts_SelectedCellsChanged" IsEnabled="true">
                <DataGrid.Columns>
                    
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="Auto" IsReadOnly="True"/>

                    <DataGridTextColumn Header="Status" Binding="{Binding Active}" IsReadOnly="True"/>

                    <DataGridCheckBoxColumn Header="Admin" Binding="{Binding UserIsAdmin}" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>

        </StackPanel>
    </Grid>
</Page>