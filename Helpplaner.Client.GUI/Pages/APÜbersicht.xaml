<Page x:Class="Helpplaner.Client.GUI.Pages.APÜbersicht"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Helpplaner.Client.GUI.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="700"
      Title="APÜbersicht">


    <Page.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Themes\DarkMode.xaml"/>


                <!-- You can include a default theme here -->
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="Button" >

            </Style>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <ControlTemplate x:Key="RoundetButton" TargetType="{x:Type ButtonBase}">
                <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted" Value="true">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{DynamicResource BackgroundColorTextHighlight}"></Setter>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="textboxSearch" TargetType="TextBox">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="#b0b0c6"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="Padding" Value="10,7"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBoxBase">
                            <Border x:Name="border" CornerRadius="15"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True" BorderThickness="1"
                        BorderBrush="#e0e6ed">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                                </Trigger>

                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="#d9d9d9" TargetName="border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="addButton" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource BackgroundColorTextHighlight}"/>
                <Setter Property="Foreground" Value="{DynamicResource ColorText}"/>
                <Setter Property="Width" Value="160"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Margin" Value="0 10 0 0"/>
                <Setter Property="Grid.Row" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="7"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="1" Margin="30,20,20,20" Background="{DynamicResource BackgroundColorMain}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="252.76"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <!--Search Textbox-->
            <Grid Grid.Row="1" Width="300" HorizontalAlignment="Left">
                <TextBlock Margin="20,0" VerticalAlignment="Center" Foreground="#b0b9c6"
               IsHitTestVisible="False" Panel.ZIndex="1" Text="Suchen..."
               Visibility="Visible"/>

                <TextBox x:Name="txtSearch" Style="{StaticResource ResourceKey=textboxSearch}"/>

            </Grid>


            <!--Page Title-->
            <TextBlock Text="Arbeitspakete" Grid.Row="2" FontSize="20" FontWeight="SemiBold"
                       Margin="0,10,0,0" HorizontalAlignment="Left" Foreground="{DynamicResource ColorText}"/>
            
            
            <!-- Add Button-->
            <Button Grid.Row="2" Style="{StaticResource ResourceKey=addButton}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Arbeitspaket hinzufügen"/>
                </StackPanel>
                
            </Button>

            <!-- Seperator-->
            <Separator Height="1" Grid.Row="3" Background="{DynamicResource BackgroundColorMain}"
                       Margin="0 -1 0 7">
                
            </Separator>
            
            <!-- Counter Title-->
            <TextBlock Text="-Anzahl- Pakete" Grid.Row="4" FontSize="18" FontWeight="SemiBold"
                       HorizontalAlignment="Left" Foreground="{DynamicResource ColorText}" Margin="0" />
            
            
            <!-- Datagrid-->
            <DataGrid Style="{DynamicResource DataGridStyle1}" CellStyle="{DynamicResource DataGridCellStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" RowStyle="{DynamicResource DataGridRowStyle1}" Grid.Row="5"
                      x:Name="APDataGrid" Padding="5" Margin="10 10 10 0">
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn CanUserResize="False" Width="auto">
                        <DataGridCheckBoxColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox/>
                            </DataTemplate>
                        </DataGridCheckBoxColumn.HeaderTemplate>
                    </DataGridCheckBoxColumn>

                    <DataGridCheckBoxColumn Header="#" IsReadOnly="True" CanUserResize="False" Width="auto"/>

                    <DataGridTemplateColumn Header="Name" IsReadOnly="True" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Border Width="25" Height="25" CornerRadius="50" Margin="0 0 10 0" Background="{DynamicResource BackgroundColorMain}">
                                        <TextBlock Text="..." VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource ColorText}" Margin="0 0 0 1"/>
                                        
                                    </Border>

                                    <TextBlock Text="..." VerticalAlignment="Center"/>

                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridCheckBoxColumn Header="#" IsReadOnly="True" CanUserResize="False" Width="auto"/>

                </DataGrid.Columns>
                
            </DataGrid>
            
            
            <!-- Pagination Section-->
            <Border Grid.Row="6" HorizontalAlignment="Right" BorderBrush="{DynamicResource BackgroundColorSecondary}"
                   BorderThickness="1" CornerRadius="5" Padding="2" Background="{DynamicResource BackgroundColorSecondary}"
                   Margin="0 10 10 10">
                <StackPanel Orientation="Horizontal">
                    <Button Background="{DynamicResource BackgroundColorSecondary}" BorderThickness="0">
                        <TextBlock Text="previous" FontSize="8" FontWeight="Light" Foreground="{DynamicResource ColorText}"
                                   Background="{DynamicResource BackgroundColorSecondary}" Padding="1"/>
                    </Button>

                    <Rectangle Width="1" Margin="3 7"/>

                    <Button Background="{DynamicResource BackgroundColorSecondary}" BorderThickness="0">
                        <TextBlock Text="next" FontSize="8" FontWeight="Light" Foreground="{DynamicResource ColorText}"
               Background="{DynamicResource BackgroundColorSecondary}" Padding="1"/>
                    </Button>

                </StackPanel>
            </Border>
            


        </Grid>


        

    </Grid>
</Page>
